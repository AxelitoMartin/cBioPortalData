% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cBioPortal.R
\name{cBioPortal}
\alias{cBioPortal}
\alias{getStudies}
\alias{clinicalData}
\alias{molecularProfiles}
\alias{molecularSlice}
\alias{searchOps}
\alias{geneTable}
\alias{samplesInSampleLists}
\alias{sampleLists}
\alias{allSamples}
\alias{genePanels}
\alias{getGenePanel}
\alias{genePanelMolecular}
\alias{getGenePanelMolecular}
\alias{getSampleInfo}
\alias{getDataByGenePanel}
\title{The R interface to the cBioPortal API Data Service}
\usage{
cBioPortal()

getStudies(api)

clinicalData(api, studyId = NA_character_)

molecularProfiles(api, studyId = NA_character_,
  projection = c("SUMMARY", "ID", "DETAILED", "META"))

molecularSlice(api, molecularProfileId = NA_character_,
  entrezGeneIds = NULL, sampleIds = NULL, check = TRUE)

searchOps(api, keyword)

geneTable(api, ...)

samplesInSampleLists(api, sampleListIds = NA_character_, check = TRUE)

sampleLists(api, studyId = NA_character_)

allSamples(api, studyId = NA_character_)

genePanels(api)

getGenePanel(api, genePanelId = NA_character_)

genePanelMolecular(api, molecularProfileId = NA_character_,
  sampleListId = NULL, sampleIds = NULL)

getGenePanelMolecular(api, molecularProfileIds = NA_character_,
  sampleIds)

getSampleInfo(api, studyId = NA_character_, sampleListIds = NULL,
  projection = c("SUMMARY", "ID", "DETAILED", "META"))

getDataByGenePanel(api, studyId = NA_character_,
  genePanelId = NA_character_, by = c("entrezGeneId",
  "hugoGeneSymbol"), molecularProfileId = NULL, sampleListId = NULL,
  check = TRUE)
}
\arguments{
\item{api}{An API object of class `cBioPortal` from the `cBioPortal`
function}

\item{studyId}{character(1) Indicates the "studyId" as taken from
`getStudies`}

\item{projection}{character(default: "SUMMARY") Specify the projection
type for data retrieval for details see API documentation}

\item{molecularProfileId}{character(1) Indicates a molecular profile ID}

\item{entrezGeneIds}{numeric() A vector indicating entrez gene IDs}

\item{sampleIds}{character() Sample identifiers}

\item{check}{logical(1) Whether to check the inputs against values from the
API (i.e., for 'studyId', 'genePanelId', 'molecularProfileId', and
'sampleListId')}

\item{keyword}{character(1) Keyword or pattern for searching through
available operations}

\item{...}{Additional arguments to lower level API functions}

\item{sampleListIds}{character() A vector of 'sampleListId' as obtained from
`sampleLists`}

\item{genePanelId}{character(1) Identifies the gene panel, as obtained
from the `genePanels` function}

\item{sampleListId}{character(1) A sample list identifier as obtained from
`sampleLists()``}

\item{molecularProfileIds}{character() A vector of molecular profile IDs}

\item{by}{character(1) Either 'entrezGeneId' or 'hugoGeneSymbol' for row
metadata}
}
\value{
cBioPortal: An API object of class 'cBioPortal'

    cBioPortalData: A data object of class 'MultiAssayExperiment'
}
\description{
This function gives users access to the cBioPortal data with an
    API representation invoked from `cBioPortal()`
}
\section{API Metadata}{

    * getStudies - Obtain a table of studies and associated metadata


    * searchOps - Search through API operations with a keyword


    * geneTable - Get a table of all genes by 'entrezGeneId' or
    'hugoGeneSymbol'


    * sampleLists - obtain all `sampleListIds` for a particular `studyId`


    * allSamples - obtain all samples within a particular `studyId`


    * genePanels - Show all available gene panels
}

\section{Patient Data}{

     * clinicalData - Obtain clinical data for a particular study identifier
     ('studyId')
}

\section{Molecular Profiles}{

     * molecularProfiles - Produce a molecular profiles dataset for a given
     study identifier ('studyId')


    * molecularSlice - Produce a dataset of molecular profile data based on
    `molecularProfileId`, `entrezGeneIds`, and `sampleIds`
}

\section{Sample Data}{

    * samplesInSampleLists - get all samples associated with a 'sampleListId'


    * getSampleInfo - Obtain sample metadata for a particular `studyId` or
    `sampleListId`
}

\section{Gene Panels}{

    * getGenePanels - Obtain the gene panel for a particular 'genePanelId'


    * genePanelMolecular - get gene panel data for a paricular
    `molecularProfileId` and `sampleListId` combination


    * getGenePanelMolecular - get gene panel data for a combination of
    `molecularProfileId` and `sampleListId` vectors


    * getDataByGenePanel - Download data for a gene panel and
    `molecularProfileId` combination, optionally a `sampleListId` can be
    provided.
}

\examples{
cbio <- cBioPortal()

getStudies(api = cbio)

searchOps(api = cbio, keyword = "molecular")

clinicalData(api = cbio, studyId = "acc_tcga")

molecularProfiles(api = cbio, studyId = "acc_tcga")

molecularSlice(api = cbio, molecularProfileId = "acc_tcga_rna_seq_v2_mrna",
    entrezGeneIds = c(1, 2),
    sampleIds = c("TCGA-OR-A5J1-01", "TCGA-OR-A5J2-01")
)

sampleLists(api = cbio, studyId = "acc_tcga")

samplesInSampleLists(api = cbio,
    sampleListIds = c("acc_tcga_rppa", "acc_tcga_cnaseq")
)

genePanels(cbio)

getGenePanel(cbio, "IMPACT341")

sampleLists(cbio, "acc_tcga")

}
