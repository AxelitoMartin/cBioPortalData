% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cBioPortal.R
\name{cBioPortal}
\alias{cBioPortal}
\alias{getStudies}
\alias{clinicalData}
\alias{molecularProfiles}
\alias{molecularSlice}
\alias{searchOps}
\alias{geneTable}
\alias{samplesInSampleLists}
\alias{sampleLists}
\alias{allSamples}
\alias{genePanels}
\alias{getGenePanel}
\alias{genePanelMolecular}
\alias{getGenePanelMolecular}
\alias{getSampleInfo}
\alias{getDataByGenePanel}
\title{The interface to the cBioPortal API Service}
\usage{
cBioPortal()

getStudies(cbio)

clinicalData(cbio, studyId)

molecularProfiles(cbio, studyId, projection = c("SUMMARY", "ID",
  "DETAILED", "META"))

molecularSlice(cbio, molecularProfileId, entrezGeneIds = NULL,
  sampleIds = NULL)

searchOps(cbio, keyword)

geneTable(cbio, ...)

samplesInSampleLists(cbio, sampleListIds)

sampleLists(cbio, studyId)

allSamples(cbio, studyId)

genePanels(cbio)

getGenePanel(cbio, genePanelId)

genePanelMolecular(cbio, molecularProfileId, sampleListId = NULL,
  sampleIds = NULL)

getGenePanelMolecular(cbio, molecularProfileIds, sampleIds)

getSampleInfo(cbio, studyId, sampleListIds = NULL,
  projection = c("SUMMARY", "ID", "DETAILED", "META"))

getDataByGenePanel(cbio, studyId, genePanelId, by = c("entrezGeneId",
  "hugoGeneSymbol"), molecularProfileId = NULL, sampleListId = NULL)
}
\arguments{
\item{cbio}{An object of class `cBioPortal`}

\item{studyId}{character(1) Indicates the "studyId" as taken from
`getStudies`}

\item{molecularProfileId}{character(1) Indicates a molecular profile ID}

\item{entrezGeneIds}{numeric() A vector indicating entrez gene IDs}

\item{sampleIds}{character() TCGA sample identifiers}

\item{keyword}{character(1) Keyword or pattern for searching through
available operations}

\item{sampleListIds}{character() A vector of 'sampleListId' as obtained from
`sampleLists`}

\item{genePanelId}{character(1) Identifies the gene panel, as obtained
from the `genePanels` function}

\item{molecularProfileIds}{character() A vector of molecular profile IDs}

\item{by}{character(1) Whether to use 'entrezGeneId' or 'hugoGeneSymbol'
as row metadata}
}
\value{
cBioPortal: An object of class 'cBioPortal'

    cBioPortaldata: An object of class 'MultiAssayExperiment'
}
\description{
This function allows the use of the cBioPortal API
}
\section{API Metadata}{

    * getStudies - Obtain a table of studies and associated metadata


    * searchOps - Search through API operations with a keyword


    * geneTable - Get a table of all genes by 'entrezGeneId' or
    'hugoGeneSymbol'


    * sampleLists - obtain all `sampleListIds` for a particular `studyId`


    * allSamples - obtain all samples within a particular `studyId`


    * genePanels - Show all available gene panels
}

\section{clinicalData}{

     Obtain clinical data for a particular study identifier
}

\section{Molecular Profiles}{

     * molecularProfiles - Produce a molecular profiles dataset for a given
     study identifier


    * molecularSlice - Produce a dataset of molecular profile data based on
    `molecularProfileId`, `entrezGeneIds`, and `sampleIds`
}

\section{Sample Data}{

    * samplesInSampleLists - get all samples associated with a 'sampleListId'


    * getSampleInfo - Obtain sample metadata for a particular `studyId` or
    `sampleListId`
}

\section{Gene Panels}{

    * getGenePanels - Obtain the gene panel for a particular 'genePanelId'


    * genePanelMolecular - get gene panel data for a paricular
    `molecularProfileId` and `sampleListId` combination


    * getGenePanelMolecular - get gene panel data for a combination of
    `molecularProfileId` and `sampleListId` vectors


    * getDataByGenePanel - Download data for a gene panel and
    `molecularProfileId` combination, optionally a `sampleListId` can be
    provided.
}

\examples{

cc <- cBioPortal()

getStudies(cbio = cc)

searchOps(cbio = cc, keyword = "molecular")

molecularProfiles(cbio = cc, studyId = "acc_tcga")

molecularSlice(cbio = cc, molecularProfileId = "acc_tcga_rna_seq_v2_mrna",
    entrezGeneIds = c(1, 2),
    sampleIds = c("TCGA-OR-A5J1-01", "TCGA-OR-A5J2-01")
)

sampleLists(cbio = cc, studyId = "acc_tcga")

samplesInSampleLists(cbio = cc,
    sampleListIds = c("acc_tcga_rppa", "acc_tcga_cnaseq")
)

sampleLists(cc, "acc_tcga")

}
